@import url("https://fonts.googleapis.com/css2?family=Poppins&display=swap");

// Custom variables
$clr-primary: #ffffff;
$clr-accent: #a18aff;
$high-priority-clr: #fd99af;
$mid-priority-clr: #fac608;
$low-priority-clr: #3fd4f4;
$primary-font: "Poppins", sans-serif;
$primary-font-clr: #717082;

@mixin reset-default-appearance {
  appearance: none;
  border: none;
  background-color: transparent;
  outline: none;
}

@mixin flex($gapValue, $vertical: false) {
  display: flex;
  gap: $gapValue;

  @if $vertical {
    flex-direction: column;
  }
}

// modern css reset
/*
  1. Use a more-intuitive box-sizing model.
*/
*, *::before, *::after {
  box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
  padding: 0;
}
/*
  3. Allow percentage-based heights in the application
*/
html, body {
  height: 100%;
}
/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
  6. Improve media defaults
*/
img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}
/*
  7. Remove built-in form typography styles
*/
input, button, textarea, select {
  font: inherit;
}
/*
  8. Avoid text overflows
*/
p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}

/*
  9. Create a root stacking context
*/
#root, #__next {
  isolation: isolate;
}

// General section

body {
  background-color: $clr-accent;
  height: 100vh;
}

.container {
  // display: grid;
  // grid-template-columns: 1fr 2fr;
  height: 100vh;
  font-family: $primary-font;
  color: $primary-font-clr;
}

input:not([type="text"]),
button {
  cursor: pointer;
}

input,
button
 {
  @include reset-default-appearance();
  color: $primary-font-clr;
 }

 // Nav section

 header {
  display: flex;
  height: 60px;
  background-color: $clr-primary;

  .toggle-nav-btn {
    margin-left: 2.5em;

    svg {
      fill: $clr-accent;

      &:hover {
        filter: brightness(90%);
      }
    }
  }

  nav {
    height: calc(100vh - 60px);
    width: 100vw;
    background-color: rgba(133, 131, 131, 0.3);
    position: fixed;
    top: 60px;
    z-index: 99;
    display: block;
    visibility: hidden;
    pointer-events: none;
  
    .nav-wrapper { 
      @include flex(2em, $vertical: true);
      background-color: $clr-primary;
      box-shadow: 5px 5px 5px 0 rgba(0, 0, 0, .3);
      padding: 2.5em;
      height: 100vh;
      width: 300px;
      display: flex;
      transform: translateX(-100%);
      pointer-events: none;
      transition: all 150ms ease-out;
  
    }
  
    &[aria-expanded="true"] {
      visibility: visible;
      pointer-events: auto;
    }
    
    &[aria-expanded="true"] .nav-wrapper {
      transform: translateX(0);
      transition: all 200ms ease-in;
      pointer-events: auto;
    }
  
    ul {
      @include flex(1em, $vertical: true);
      list-style: none;
  
      li {
        display: flex;
        justify-content: space-between;
    
        &.active {
          color: $clr-accent;
        }
  
        span:first-child {
          font-weight: 600;
          cursor: pointer;
    
          &:hover {
            color: $clr-accent
          }
        }
    
      }
    }
  }
 }

.projects-container {
  @include flex(1em, $vertical: true);
  gap: 1em;

  .add-project-btn {
    align-self: start;
  }

  .project-form {
    display: none;
  }

  .btn-container {
    @include flex(1em);
    justify-content: center;

    & *:hover {
      color: $clr-accent;
    }
  }

  .add-project-btn:hover {
    color: $clr-accent;
  }
}

.edit-project-title,
.project-input {
  border: 1px solid $clr-accent;
  border-radius: 4px;
  padding: 5px;
}

// Tasks section

.tasks-container {
  @include flex(1.5em, $vertical: true);
  padding-block: 2rem;
  overflow-x: hidden;
  overflow-y: auto;

  .tasks {
    @include flex(10px, $vertical: true);
    align-items: center;
  }

  .task-form,
  .task,
  .edit-form {
    @include flex(1em);
    flex-wrap: wrap;
    align-items: center;
    align-self: center;
    justify-content: space-between;
    background-color: $clr-primary;
    padding: 0.8em;
    border-radius: 1em;

    &:hover,
    &:focus-within {
    box-shadow: 0 5px 5px rgba(0, 0, 0, .3);
    }

    .left-wrapper,
    .right-wrapper {
      @include flex(10px);
      align-items: center;
    }

    .priority-btns {
      @include flex(5px)
    }
  }
  
  .task-form
  {
    width: min(1000px, 95%);
    margin: 1em;
  }

  .task,
  .edit-form {
    width: min(900px, 95%);
  }

  .task-form,
  .edit-form {
    padding: 1em;
  }
}


input:is([type="radio"], [type="checkbox"]) {
  $size: 1.1250em;

  height: $size;
  width: $size;
  border: 2px solid;
  border-radius: 50%;

  display: grid;
  place-content: center;

  &.high-priority {
  border-color: $high-priority-clr;

  &::after {
    background-color: $high-priority-clr;
  }

    &:checked::after {
      background-color: $high-priority-clr;
    }
  }

  &.medium-priority {
    border-color: $mid-priority-clr;

    &::after {
      background-color: $mid-priority-clr;
    }

    &:checked::after {
      background-color: $mid-priority-clr;
    }
  }
  
  &.low-priority {
    border-color: $low-priority-clr;

    &::after {
      background-color: $low-priority-clr;
    }

    &:checked::after { 
      background-color: $low-priority-clr;
    }
  }  
  }

input[type="radio"] {
  $circle-size: 1em;

  &::after {
    content: "";
    height: $circle-size;
    width: $circle-size;
    border-radius: 50%;
    transform: scale(0);
    transition: transform 120ms ease-out;

  }

  &:checked::after {
    transform: scale(1);
  }
}


input[type="checkbox"] {
  $check-mark-size: 0.75em;  

  &::after {
  content: "";
  height: $check-mark-size;
  width: $check-mark-size;
  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
  transform: scale(0);
  transform-origin: bottom left;
  transition: transform 120ms ease-out;
}

&:checked::after {
  transform: scale(1);
}
}